<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.amy</groupId>
    <artifactId>web01</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>Day0902</module>
        <module>Day0903</module>
        <module>Day0904</module>
        <module>Day0909_mybatis</module>
        <module>Mybatis01</module>
        <module>Mybatis02_CRUD</module>
        <module>Mybatis02_DAO</module>
        <module>Mybatis02_datasourceAndTx</module>
        <module>Mybatis02_dynamicSQL</module>
        <module>Mybatis02_one2many</module>
        <module>Mybatis02_many2many</module>
        <module>Mybatis02_jndi</module>
        <module>Day0910_mybatis01</module>
        <module>Day0910_mybatis02</module>
        <module>Mybatis03_lazy</module>
        <module>mybatis03_cache</module>
        <module>mybatis03_annotation</module>
        <module>mybatis03_annoOne2Many</module>
        <module>Day0910_mybatis03</module>
        <module>Spring01</module>
        <module>Spring01_jdbc</module>
        <module>Spring01_factory</module>
        <module>Spring01_spring</module>
        <module>Spring01_bean</module>
        <module>Spring01_DI</module>
        <module>Spring02_anno_ioc</module>
        <module>Spring02_account_xmlioc</module>
        <module>Spring02_account_annoioc</module>
        <module>Spring02_account_annoioc_withoutxml</module>
        <module>Spring03_account</module>
        <module>Spring03_proxy</module>
        <module>Spring03_springAOP</module>
        <module>Spring03_adviceType</module>
        <module>Spring03_annotationAOP</module>
        <module>Spring04_jdbctemplate</module>
        <module>Spring04_account_aoptx_xml</module>
        <module>Spring04_account_aoptx_anno</module>
        <module>Spring04_tx</module>
        <module>Spring04_tx_xml</module>
        <module>Spring04_tx_anno</module>
        <module>Spring04_anno_tx_withoutxml</module>
        <module>Spring04_account_tx</module>
        <module>Spring04_jdk</module>
        <module>Day0916_spring01</module>
        <module>Day0916_spring02</module>
        <module>Day0916_spring03</module>
        <module>Day0916_spring04</module>
        <module>Day0917_spring05</module>
        <module>Day0917_spring06</module>
        <module>Day0917_spring07</module>
        <module>Day0917_spring07_web</module>
        <module>Day0917_spring08</module>
        <module>Day0917_spring09</module>
        <module>SpringMvc_day01_01_start</module>


    </modules>
    <packaging>pom</packaging>

    <name>web01 Maven Webapp</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <!--测试-->
        <!-- junit-platform-launcher -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.5.2</version>
            <scope>test</scope>
        </dependency>
        <!-- junit-jupiter-engine -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <!-- junit-vintage-engine -->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>

        <!--spring-->
        <!--
        spring-aop模块提供了一个符合AOP联盟（要求）的面向方面的编程实现,例如.允许您定义方法拦截器和切入点（pointcuts）,
        以便干净地解耦应该被分离的功能 实现。 使用源级元数据(source-level metadata)功能，您还可以以类似于.NET属性
        的方式将行为信息合并到代码中. 单独的spring-aspects模块.提供了与AspectJ的集成.
        spring-instrument模块提供了类植入(instrumentation)支持和类加载器的实现,可 应用在特定的应用服务器中.
        该spring-instrument-tomcat 模块包含了支持Tomcat 的植入代理。
        -->
        <!--cglib aspectj关于aop的实现-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.9.4</version>
        </dependency>
        <!-- aspectjrt -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.9.4</version>
        </dependency>
        <!--aop面向切面编程-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>3.3.0</version>
        </dependency>
        <!--解决高版本JDK中,程序包 javax.annotation 不可见,@Resource注解使用-->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.1</version>
        </dependency>
        <!--
        上下文（spring-context）模块建立在由Core和Beans模块提供的坚实的基础上:它提供一个框架式的对象访问方式,
        类似于一个JNDI注册表.上下文模块从Beans模块继承其功能,并添加支持国际化（例如资源集合）,事件传播,资源负载.
        并且透明创建上下文,例如Servlet容器.Context模块还支持Java EE的功能,如EJB，JMX和基本的远程处理.ApplicationContext
        接口是Context模块的焦点.spring-context-support支持整合普通第三方库到Spring应用程序上下文,特别是用于高速缓存
        （ehcache,JCache）和调度（CommonJ,Quartz）的支持。
        -->
        <!--spring-context,资源加载,国际化,事务传播-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <!-- spring-context-support -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>



        <!--
        spring-core和spring-beans模块提供了框架的基础功能,包括IOC和依赖注入功能.BeanFactory是一个成熟的工厂模式的实现.
        你不再需要编程去实现单例模式,允许你把依赖关系的配置和描述从程序逻辑中解耦。
        -->
        <!--spring-core-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>5.1.9.RELEASE</version>
            <exclusions>
                <exclusion>
                    <artifactId>spring-jcl</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--spring-beans-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <!--
        spring-expression模块提供了强大的表达式语言去支持查询和操作运行时对象图
        -->
        <!--spring-expression spring提供的表达式语言 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>

        <!-- 日志实现 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.7</version>
        </dependency>
        <!--commons logging-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
            <version>2.7</version>
        </dependency>
        <!-- 日志框架(门面) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
        </dependency>
        <!-- 日志桥接包   桥接包的版本须对应log4j2的版本 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.7</version>
        </dependency>
        <!--jcl(commons-logging) -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>
        <!--spring-tx-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <!--spring-jdbc-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <!--spring-test-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>



        <!--mybatis-generator-maven-plugin -->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-maven-plugin</artifactId>
            <version>1.3.7</version>
        </dependency>
        <!-- pagehelper -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>5.1.10</version>
        </dependency>
        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.10</version>
        </dependency>
        <!-- jaxen -->
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1.6</version>
        </dependency>
        <!--dom4j-->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
        </dependency>
        <!--json-lib -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>
        <!-- JSP -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jsp-api</artifactId>
            <scope>provided</scope>
            <version>9.0.24</version>
        </dependency>
        <!--jstl-->
        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>jstl-api</artifactId>
            <version>1.2</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet.jsp</groupId>
                    <artifactId>jsp-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jstl-impl</artifactId>
            <version>1.2</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet.jsp</groupId>
                    <artifactId>jsp-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet.jsp.jstl</groupId>
                    <artifactId>jstl-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--单元测试-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!--commons-dbutils  Apache 组织提供的一个开源 JDBC 工具类库，对传统操作数据库的类进行二次封装，可以把结果集转化成List-->
        <dependency>
            <groupId>commons-dbutils</groupId>
            <artifactId>commons-dbutils</artifactId>
            <version>1.7</version>
        </dependency>

        <!--数据库-->
        <!--c3p0-->
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.1.2</version>
        </dependency>
        <!-- 阿里数据源 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.1.8</version>
        </dependency>
        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.46</version>
        </dependency>
        <!--commons-beanutils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
        </dependency>


    </dependencies>

    <build>
        <finalName>web01</finalName>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->

            <plugins>
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.2</version>
                    <configuration>
                        <!-- Tomcat命令行+热部署？ -->
                        <url>http://localhost:8080/manager/text</url>
                        <!-- server、name、password与settings.xml中的id、username、password对应 -->
                        <server>tomcat9</server>
                        <username>root</username>
                        <password>root</password>
                        <update>true</update>
                        <!-- web工程名 -->
                        <path>/web01</path>
                    </configuration>

                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
